{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\wpp-platform\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Verificar se há token salvo no localStorage\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      setUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const data = await apiService.login(email, password);\n      setToken(data.token);\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      toast.success('Login realizado com sucesso!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      toast.error(error.message || 'Erro ao fazer login');\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Logout realizado com sucesso!');\n  };\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n  const getAuthHeaders = () => {\n    return {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    };\n  };\n  const value = {\n    user,\n    token,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated,\n    getAuthHeaders\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","apiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","isLoading","setIsLoading","savedToken","localStorage","getItem","savedUser","JSON","parse","login","email","password","data","setItem","stringify","success","error","console","message","logout","removeItem","isAuthenticated","getAuthHeaders","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/wpp-platform/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport apiService from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar se há token salvo no localStorage\r\n    const savedToken = localStorage.getItem('token');\r\n    const savedUser = localStorage.getItem('user');\r\n\r\n    if (savedToken && savedUser) {\r\n      setToken(savedToken);\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const data = await apiService.login(email, password);\r\n      \r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      \r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      \r\n      toast.success('Login realizado com sucesso!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erro no login:', error);\r\n      toast.error(error.message || 'Erro ao fazer login');\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    toast.success('Logout realizado com sucesso!');\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!token && !!user;\r\n  };\r\n\r\n  const getAuthHeaders = () => {\r\n    return {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    };\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    isAuthenticated,\r\n    getAuthHeaders,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}